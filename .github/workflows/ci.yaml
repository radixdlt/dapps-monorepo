name: Dashboard CI/CD

on:
  push:
    branches:
      - DO-757-dashboard
  pull_request:
    branches:
      - DO-757-dashboard

jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-20.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  setup-dashboard-tags:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker-tags.outputs.tags }}
      labels: ${{ steps.docker-tags.outputs.labels }}
      json: ${{ steps.docker-tags.outputs.json }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Docker tags for pricemonitoring
        id: docker-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/dashboard
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}

  build-dashboard:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint
      - name: Test
        run:  npm run test
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@master
      #   with:
      #     projectBaseDir: ./
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  push-dashboard:
    runs-on: ubuntu-latest
    needs: 
    - build-dashboard
    - setup-dashboard-tags
    steps:
      - uses: actions/checkout@v2
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile
          push: true
          context: .
          tags: ${{ needs.setup-dashboard-tags.outputs.tags }}
          labels: ${{ needs.setup-dashboard-tags.outputs.labels }}

  