name: Dashboard CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
    - published
  workflow_dispatch:
    inputs:
      ENVIRONMENT_NAME:
        description: 'Environment Name'
        required: true
        default: enkinet
        type: choice
        options:
          - enkinet
          - hammunet
          - nebunet
          - gilganet
          - mardunet
          - betanet
          - kisharnet

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Dump context
        uses: crazy-max/ghaction-dump-context@158bbf4d6158a44a7e13f76295dc55a69e481a6e
      - name: Define network name
        run: |
          if [ "${{ github.event_name}}" = 'workflow_dispatch' ]; then
            echo "NETWORK_NAME="${{ github.event.inputs.ENVIRONMENT_NAME }}"" >> $GITHUB_ENV
          elif [ "${{ github.event.action }}" = "published" ]; then
            echo "NETWORK_NAME=kisharnet" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" -a "${{ github.event_name }}" = 'push' ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "NETWORK_NAME=hammunet" >> $GITHUB_ENV
          fi
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "build"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
          network_name: ${{ env.NETWORK_NAME }}
      - name: Output job summary
        run: |
          echo "Network that will be deployed: ${{ env.NETWORK_NAME }}" >> $GITHUB_STEP_SUMMARY

  setup-tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Docker tags for dashboard
        id: dashboard-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/dashboard
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}
      - name: Docker tags for storybook
        id: storybook-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/storybook
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}
    outputs:
      dashboard-tags: ${{ steps.dashboard-tags.outputs.tags }}
      dashboard-labels: ${{ steps.dashboard-tags.outputs.labels }}
      dashboard-json: ${{ steps.dashboard-tags.outputs.json }}
      storybook-tags: ${{ steps.storybook-tags.outputs.tags }}
      storybook-labels: ${{ steps.storybook-tags.outputs.labels }}
      storybook-json: ${{ steps.storybook-tags.outputs.json }}

  lint:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "lint"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Lint
        run:  yarn lint

  prettier:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "prettier"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Prettier
        run:  yarn prettier

  sonar:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          always-auth: true
          node-version: 16.17.1
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "sonar"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/sonar-token-JkrXwe"
          parse_json: true
      - name: Run story book tests
        run: |
            yarn
            yarn storybook > output.log 2>&1 &
            STORYBOOK_PID=$!
            tail -n0 -f output.log | sed '/Svelte started/ q'
            yarn test:storybook
            kill $STORYBOOK_PID
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ env.GH_SONAR_TOKEN }}

  svelte-check:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "svelte"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Svelte check
        run:  yarn svelte:check

  unit-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          always-auth: true
          node-version: 16.17.1
          cache: yarn
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "unit-tests"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Unit tests
        run:  yarn coverage

  push-dashboard:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    needs:
      - setup-tags
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Define network name
        run: |
          if [ "${{ github.event_name}}" = 'workflow_dispatch' ]; then
            echo "NETWORK_NAME="${{ github.event.inputs.ENVIRONMENT_NAME }}"" >> $GITHUB_ENV
          elif [ "${{ github.event.action }}" = "published" ]; then
            echo "NETWORK_NAME=kisharnet" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" -a "${{ github.event_name }}" = 'push' ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "NETWORK_NAME=hammunet" >> $GITHUB_ENV
          fi
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-common-secrets-read-access"
          app_name: "dashboard"
          step_name: "push-dash"
          secret_prefix: "GH_GCR_JSON_KEY"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/common/gcr-credentials-OeJwWi"
          parse_json: false
      - name: Login to GCR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ env.GH_GCR_JSON_KEY }}
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with:
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "push-dashboard"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - name: Restore yarn cache
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16.17.1
          cache: yarn
      - name: Copy cache locally
        run: cp -R $HOME/.cache .cache
      - name: Docker build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: ./Dockerfile
          push: true
          context: .
          tags: ${{ needs.setup-tags.outputs.dashboard-tags }}
          labels: ${{ needs.setup-tags.outputs.dashboard-labels }}
          target: "dashboard"
          build-args: |
            NPM_TOKEN=${{ env.GH_NPM_TOKEN }}
            NETWORK_NAME=${{ env.NETWORK_NAME }}
            NPM_LOCAL_CACHE=.cache/
      - name: Docker Image output
        run: docker images
      - name: Output job summary
        run: |
          echo "Network that will be deployed: ${{ env.NETWORK_NAME }}" >> $GITHUB_STEP_SUMMARY

  push-storybook:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    needs:
      - setup-tags
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
      - name: Define network name
        run: |
          if [ "${{ github.event_name}}" = 'workflow_dispatch' ]; then
            echo "NETWORK_NAME="${{ github.event.inputs.ENVIRONMENT_NAME }}"" >> $GITHUB_ENV
          elif [ "${{ github.event.action }}" = "published" ]; then
            echo "NETWORK_NAME=kisharnet" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" = "refs/heads/main" -a "${{ github.event_name }}" = 'push' ] || [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "NETWORK_NAME=hammunet" >> $GITHUB_ENV
          fi
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-common-secrets-read-access"
          app_name: "dashboard"
          step_name: "push-story"
          secret_prefix: "GH_GCR_JSON_KEY"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/common/gcr-credentials-OeJwWi"
          parse_json: false
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with:
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "push-story"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - name: Login to GCR
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ env.GH_GCR_JSON_KEY }}
      - name: Restore yarn cache
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: 16.17.1
          cache: yarn
      - name: Copy cache locally
        run: cp -R $HOME/.cache .cache
      - name: Docker build and push
        uses: docker/build-push-action@c56af957549030174b10d6867f20e78cfd7debc5
        with:
          file: ./Dockerfile
          push: true
          context: .
          tags: ${{ needs.setup-tags.outputs.storybook-tags }}
          labels: ${{ needs.setup-tags.outputs.storybook-labels }}
          target: "storybook"
          build-args: |
            NPM_TOKEN=${{ env.GH_NPM_TOKEN }}
            NETWORK_NAME=${{ env.NETWORK_NAME }}
            NPM_LOCAL_CACHE=.cache/
      - name: Docker Image output
        run: docker images
      - name: Output job summary
        run: |
          echo "Network that will be deployed: ${{ env.NETWORK_NAME }}" >> $GITHUB_STEP_SUMMARY

  deploy_pull_request:
    if: ${{ github.event.pull_request }}
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: pr
      hierarchical_namespace: dashboard-ci-pr
      namespace: dashboard-pr-${{ github.event.number }}
      create_subns: true
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-pr-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.prNumber=${{ github.event.number }},
        ci.environment=pr
      app_name: "dashboard"
      step_name: "deploy-pr"

  deploy_dev:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: dev
      namespace:  dashboard-dev
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=dev
      app_name: "dashboard"
      step_name: "deploy-dev"

  deploy_enkinet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'enkinet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: enkinet
      namespace:  dashboard-enkinet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=enkinet
      environment: enkinet
      app_name: "dashboard"
      step_name: "deploy-enkinet"

  deploy_hammunet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'hammunet' && github.event_name == 'workflow_dispatch' ) ||
      ( github.ref == 'refs/heads/main' && github.event_name == 'push' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: hammunet
      namespace:  dashboard-hammunet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=hammunet
      environment: hammunet
      app_name: "dashboard"
      step_name: "deploy-hammunet"

  deploy_gilganet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'gilganet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: gilganet
      namespace:  dashboard-gilganet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=gilganet
      environment: gilganet
      app_name: "dashboard"
      step_name: "deploy-gilganet"

  deploy_mardunet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'mardunet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: mardunet
      namespace:  dashboard-mardunet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=mardunet
      environment: mardunet
      app_name: "dashboard"
      step_name: "deploy-mardunet"

  deploy_nebunet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'nebunet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: nebunet
      namespace:  dashboard-nebunet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-nebunet-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=nebunet
      environment: nebunet
      app_name: "dashboard"
      step_name: "deploy-nebunet"

  deploy_betanet:
    if: >
      ( github.event.inputs.ENVIRONMENT_NAME == 'betanet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: betanet
      namespace:  dashboard-betanet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-betanet-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=betanet
      environment: betanet
      app_name: "dashboard"
      step_name: "deploy-betanet"

  deploy_kisharnet:
    if: >
      ( github.event_name == 'release' && !github.event.release.prerelease ) ||
      ( github.event.inputs.ENVIRONMENT_NAME == 'kisharnet' && github.event_name == 'workflow_dispatch' )
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.8.3
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: kisharnet
      namespace:  dashboard-kisharnet
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::821496737932:role/gh-dashboard-kisharnet-deployer"
      eks_cluster: rtlj-prod
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=kisharnet
      environment: kisharnet
      app_name: "dashboard"
      step_name: "deploy-kisharnet"

  run-e2e-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    steps:
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          always-auth: true
          node-version: 16.17.1
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Fetch AWS secrets
        uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with: 
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "e2e-tests"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with: 
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Run e2e tests on the PR environment
        uses: cypress-io/github-action@v4
        with:
          start: yarn dev
          wait-on: http://localhost:5173

  storybook-tests:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
    if: ( github.ref == 'refs/heads/main' && github.event_name == 'push' ) || github.event.pull_request
    needs:
      - push-dashboard
      - push-storybook
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          always-auth: true
          node-version: 16.17.1
          cache: yarn
      - uses: radixdlt/iac-resuable-artifacts/fetch-secrets@v0.8.0
        with:
          role_name: "arn:aws:iam::308190735829:role/gh-dashboard-secrets-read-access"
          app_name: "dashboard"
          step_name: "unit-tests"
          secret_prefix: "GH"
          secret_name: "arn:aws:secretsmanager:eu-west-2:308190735829:secret:github-actions/rdxworks/dashboard/npm-token-aJZLx5"
          parse_json: true
      - uses: ./.github/actions/build
        with:
          npm_token: ${{ env.GH_NPM_TOKEN }}
      - name: Integration tests (PR)
        if: github.event.pull_request
        run: |
          # Due to a limitation on Github Action we cannot depend on jobs that might be skipped, because this
          # job will also be skipped.
          #
          echo "Waiting for the Kubernetes deployments to complete"
          sleep 90

          echo "Running storybook tests against PR environment"
          export TARGET_URL="https://dashboard-storybook-pr-${{ github.event.number }}.rdx-works-main.extratools.works"
          yarn test:storybook

      - name: Integration tests (Hammunet)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          # Due to a limitation on Github Action we cannot depend on jobs that might be skipped, because this
          # job will also be skipped.
          #
          echo "Waiting for the Kubernetes deployments to complete"
          sleep 90

          echo "Running storybook tests against hammunet"
          export TARGET_URL="https://hammunet-dashboard-storybook.rdx-works-main.extratools.works"
          yarn test:storybook
