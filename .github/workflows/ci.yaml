name: Dashboard CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:

jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-20.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  setup-tags:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Docker tags for dashboard
        id: dashboard-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/dashboard
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}
      - name: Docker tags for storybook
        id: storybook-tags
        uses: docker/metadata-action@v4
        with:
          images: |
            eu.gcr.io/dev-container-repo/storybook
          tags: |
            type=sha,event=pr
            type=sha,event=branch
            type=semver,pattern={{version}}
    outputs:
      dashboard-tags: ${{ steps.dashboard-tags.outputs.tags }}
      dashboard-labels: ${{ steps.dashboard-tags.outputs.labels }}
      dashboard-json: ${{ steps.dashboard-tags.outputs.json }}
      storybook-tags: ${{ steps.storybook-tags.outputs.tags }}
      storybook-labels: ${{ steps.storybook-tags.outputs.labels }}
      storybook-json: ${{ steps.storybook-tags.outputs.json }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Cache Node.js modules
        uses: actions/cache@v2
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build
        run: yarn --frozen-lockfile && yarn build
  
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: Lint
        run:  yarn --frozen-lockfile && yarn lint

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: Prettier
        run:  yarn --frozen-lockfile && yarn prettier

  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  svelte-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: Svelte check
        run:  yarn --frozen-lockfile && yarn svelte:check

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          always-auth: true
          node-version: 16.x
          cache: yarn
      - name: Unit tests
        run:  yarn --frozen-lockfile && yarn coverage

  push-dashboard:
    runs-on: ubuntu-latest
    needs: [build, setup-tags]
    steps:
      - uses: actions/checkout@v2
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile
          push: true
          context: .
          tags: ${{ needs.setup-tags.outputs.dashboard-tags }}
          labels: ${{ needs.setup-tags.outputs.dashboard-labels }}
          target: "dev-server"
      - name: Docker Image output
        run: |
          docker images

  push-storybook:
    runs-on: ubuntu-latest
    needs: 
    - setup-tags
    steps:
      - uses: actions/checkout@v2
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: eu.gcr.io
          username: _json_key
          password: ${{ secrets.GCR_EU_DEV_JSON_KEY }}
      - name: Docker build and push
        uses: docker/build-push-action@v3
        with:
          file: ./Dockerfile
          push: true
          context: .
          tags: ${{ needs.setup-tags.outputs.storybook-tags }}
          labels: ${{ needs.setup-tags.outputs.storybook-labels }}
          target: "storybook"
      - name: Docker Image output
        run: |
          docker images

  deploy_pull_request:
    if: ${{ github.event.pull_request }}
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.7
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: pr
      hierarchical_namespace: dashboard-ci-pr
      namespace: dashboard-pr-${{ github.event.number }}
      create_subns: true
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-pr-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.prNumber=${{ github.event.number }},
        ci.environment=pr
    secrets:
      HELM_GH_USER: ${{ secrets.HELM_GH_USER }}
      HELM_GH_PASS: ${{ secrets.HELM_GH_PASS }}

  deploy_dev:
    if: github.ref == 'refs/heads/main'
    uses: radixdlt/iac-resuable-artifacts/.github/workflows/deploy.yml@v0.7
    needs:
      - push-dashboard
      - push-storybook
      - setup-tags
    with:
      env_name: dev
      namespace:  dashboard-dev
      create_subns: false
      aws_region: eu-west-2
      role_to_assume: "arn:aws:iam::308190735829:role/gh-dashboard-dev-deployer"
      eks_cluster: rdx-works-main-dev
      helmfile_extra_vars: >-
        ci.tag=${{ fromJSON(needs.setup-tags.outputs.dashboard-json).labels['org.opencontainers.image.version'] }},
        ci.environment=dev
    secrets:
      HELM_GH_USER: ${{ secrets.HELM_GH_USER }}
      HELM_GH_PASS: ${{ secrets.HELM_GH_PASS }}

#  run-e2e-tests:
#    runs-on: ubuntu-latest
#    # needs:
#    # - deploy_pull_request
#    steps:
#      - uses: actions/setup-node@v2
#        with:
#          always-auth: true
#          node-version: 16.x
#      - uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#      - name: Run e2e tests on the PR environment
#        uses: cypress-io/github-action@v4
#        with:
#          start: yarn dev
#          wait-on: http://localhost:5173
