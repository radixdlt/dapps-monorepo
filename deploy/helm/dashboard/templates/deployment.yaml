apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rdxworks-dashboard.fullname" . }}
  labels:
    {{- include "rdxworks-dashboard.labels" . | nindent 4 }}
spec:
  {{- if not .Values.dashboard.autoscaling.enabled }}
  replicas: {{ .Values.dashboard.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "rdxworks-dashboard.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.dashboard.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "rdxworks-dashboard.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.dashboard.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "rdxworks-dashboard.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.dashboard.podSecurityContext | nindent 8 }}
      {{- if .Values.dashboard.enable_db_migrations }}
      initContainers:
        - name: db-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          command: ["/bin/sh", "-c", "-e"]
          args:
            - npx prisma migrate deploy
          env:
          {{- range $key, $value := .Values.dashboard.params }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $secret := .Values.dashboard.secrets }}
          - name: {{ $secret.variable }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret.name }}
                key: {{ $secret.secretName }}
          {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.dashboard.securityContext | nindent 12 }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          env:
          {{- range $key, $value := .Values.dashboard.params }}
          - name: {{ $key }}
            value: {{ $value | quote }}
          {{- end }}
          {{- range $secret := .Values.dashboard.secrets }}
          - name: {{ $secret.variable }}
            valueFrom:
              secretKeyRef:
                name: {{ $secret.name }}
                key: {{ $secret.secretName }}
          {{- end }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          {{- if .Values.dashboard.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.dashboard.metrics.port }}
              protocol: TCP
          {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
      {{- with .Values.dashboard.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dashboard.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.dashboard.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
